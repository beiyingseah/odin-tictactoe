@import url('https://fonts.googleapis.com/css2?family=Nunito+Sans:wght@200;300;400;600;700;800&display=swap');

/*** BASE ELEMENTS ***/

:root {
    --fnt-fm-default: 'Nunito Sans', sans-serif, Arial;

    /* Colour palette: font, cells, board */
    --clr-green: #55EFC4;
    --clr-white: #fdfffc;
    --clr-dark-grey: #6c757d;
    --clr-medium-grey: #adb5bd;
    --clr-light-grey: ##e8e8e8;
    
    /** KIV **/
    /* Neumorphic accents: background & shadows */
    /* --neu-bg-default: linear-gradient(145deg, #d1d1d1, #f8f8f8);
    --neu-bg-down: #e8e8e8;
    --neu-bg-up: linear-gradient(145deg, #f8f8f8, #d1d1d1);
    --neu-shadow-default: 1rem 1rem 2rem #b7b7b7, -1rem -1rem 2rem #ffffff;
    --neu-shadow-down: inset 1rem 1rem 2rem #b7b7b7,
        inset -1rem -1rem 2rem #ffffff; */

    --clr-text-default: var(--clr-dark-grey);
    --clr-main-header-text: var(--clr-white);
    --clr-footer-text: var(--clr-dark-grey);
    --modal-bg-colour: var(--clr-white);
    
    /* Element sizes */
    font-size: 18px;
    --cell-size: 100px; 
    --mark-size: calc(var(--cell-size) * 0.9); /* CSS function: calc() */

    /* Font sizes & boldness for different headings */
    --fnt-sz-main-header: 4rem;
    --fnt-sz-text-default: 1.6rem;
    --fnt-sz-footer-text: 1rem;
    --fnt-sz-scores-text: 2.5rem;
    --fnt-sz-settings-title: 2.5rem;
    --fnt-sz-winner-text: 5rem;
    --fnt-wt-300: 300;
    --fnt-wt-400: 400;
    --fnt-wt-700: 700;

}

/* Setting up some basic box-sizing */
*, *::after, *::before {
    box-sizing: border-box;
}

body {
    /* Remove HTML's default styling  (CSS reset) */
    min-height: 100vh;
    margin: 0;
    background: var(--neu-bg-default);
    box-shadow: var(--neu-shadow-default);
    font-family: var(--fnt-fm-default);
    font-size: var(--fnt-sz-text-default);
    color: var(--clr-text-default);
}

/*** GAMEBOARD ***/
.board { 
    display: grid;
    justify-content: center; 
    align-content: center;
    grid-template-columns: repeat(3, auto);
    justify-items: center;
    align-items: center;
    background-color: rgb(243,  243, 243);
}

.cell {
    width: var(--cell-size);
    height: var(--cell-size);
    border: 1px solid black;
    background-color: white;
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
    cursor: pointer;
} 

/** SYMBOLS/MARKERS **/
/* Markers are designed purely in CSS as opposed to text in HTML. 
With the text approach, you'd have to worry about font sizes and the symbols will depend on the font that you use. It's going to be hard to center. A third approach that avoids this complication is to simply use icons. */

/* Hover effect vis-a-vis gameboard state ('x' or 'circle''s turn) */
/* (Psst, most complex part of the CSS) */ 

.cell.x,
.cell.circle {
    cursor: not-allowed;
}

.cell.x::before,
.cell.x::after,
.cell.circle::before,
.cell.circle::after {
    background-color: black;
}

.board.x .cell:not(.x):not(.circle):hover::before,
.board.x .cell:not(.x):not(.circle):hover::after,
.board.circle .cell:not(.x):not(.circle):hover::before {
    background-color: lightgrey;
}

/* X SYMBOL */
.cell.x::before,
.cell.x::after,
.board.x .cell:not(.x):not(.circle):hover::before,
.board.x .cell:not(.x):not(.circle):hover::after {
    content: ''; 
    position: absolute;
    width: calc(var(--mark-size) * 0.15);
    height: var(--mark-size);
}  
 
.cell.x::before, 
.board.x .cell:not(.x):not(.circle):hover::before { 
    transform: rotate(45deg);
}

.cell.x::after,
.board.x .cell:not(.x):not(.circle):hover::after {
    transform: rotate(-45deg);
}

/* CIRCLE SYMBOL */
.cell.circle::before,
.cell.circle::after,
.board.circle .cell:not(.x):not(.circle):hover::before,
.board.circle .cell:not(.x):not(.circle):hover::after {
    content: ''; 
    position: absolute;
    border-radius: 50%;
}  

.cell.circle::before,
.board.circle .cell:not(.x):not(.circle):hover::before {
    width: var(--mark-size);
    height: var(--mark-size);
}

.cell.circle::after,
.board.circle .cell:not(.x):not(.circle):hover::after {
    width: calc(var(--mark-size) * 0.7);
    height: calc(var(--mark-size) * 0.7);
    background-color: white;
}


/*** MODAL ***/ 
.modal {
    position: fixed;
    z-index: 1;
    left:0;
    top:0;
    height: 100%;
    width: 100%;
    overflow: auto;
    background-color: rgba(0,0,0,0.6);
    backdrop-filter: blur(5px);
    display: none;
}

.modal-content {
    margin: 10% auto;
    padding: 20px;
    max-width: 400px;
    animation-name: modalopen;
    animation-duration: 0.3s;
    border-radius: 10px;
}

#resultMessage {
    color: white;
}

@keyframes modalopen{
    from {opacity: 0}
    to {opacity: 1}
}

/*** FOOTER ***/
.footer {
    position: absolute;
    left: 0;
    bottom: 0;
    width: 100%;
    font-size: var(--fnt-sz-footer-text);
    color: var(--clr-footer-text);
    display: flex;
    justify-content: center;
    align-items: center;
}

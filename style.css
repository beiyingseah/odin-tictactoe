@import url('https://fonts.googleapis.com/css2?family=Nunito+Sans:wght@200;300;400;600;700;800&display=swap');

/*** BASE ELEMENTS ***/

:root {
    --fnt-fm-default: 'Nunito Sans', sans-serif, Arial;

    /* Colour palette: font, cells, board */
    --clr-green: #2a9d8f;
    --clr-white: #fdfffc;
    --clr-dark-grey: #6c757d;
    --clr-medium-grey: #adb5bd;
    --clr-light-grey: #e8e8e8;
    
    /** KIV **/
    /* Neumorphic accents: background & shadows */
    --neu-bg-default: linear-gradient(145deg, #ebeaea, #f8f8f8);
    --neu-bg-down: #e8e8e8;
    --neu-bg-up: linear-gradient(145deg, #f8f8f8, #d1d1d1);
    --neu-shadow-default: 1rem 1rem 1rem #d0cece, -1rem -1rem 2rem #ffffff;
    --neu-shadow-input: inset 8px 8px 8px #cbced1, 
        inset -8px -8px 8px #ffffff;
    --neu-shadow-down: inset 1rem 1rem 2rem #cfcfcf,
        inset -1rem -1rem 2rem #f8f8f8;
    --neu-btn-shadow-default: 0.5rem 0.3rem 0.5rem #d0cece, -1rem -1rem 2rem #ffffff;
    --neu-btn-shadow-down: inset 1rem 1rem 2rem #cfcfcf,
        inset -1rem -1rem 2rem #f8f8f8;
    --clr-text-default: var(--clr-dark-grey);
    --clr-main-header-text: var(--clr-white);
    --clr-footer-text: var(--clr-dark-grey);
    --modal-bg-colour: var(--clr-white);
    
    /* Element sizes */
    font-size: 16px;
    --cell-size: 16vh; 
    --mark-size: calc(var(--cell-size) * 0.9); /* CSS function: calc() */

    /* Font sizes & boldness for different headings */
    --fnt-sz-main-header: 4rem;
    --fnt-sz-text-default: 1.3rem;
    --fnt-sz-footer-text: 1.2rem;
    --fnt-sz-scores-text: 2.5rem;
    --fnt-sz-settings-title: 2.5rem;
    --fnt-sz-result-text: 4rem;
    --fnt-wt-300: 300;
    --fnt-wt-400: 400;
    --fnt-wt-700: 700;

}

/* Setting up some basic box-sizing */
*, *::after, *::before {
    box-sizing: border-box;
}

body {
    /* Remove HTML's default styling  (CSS reset) */
    min-height: 100vh;
    margin: 0;
    background: var(--neu-bg-default);
    font-family: var(--fnt-fm-default);
    font-size: var(--fnt-sz-text-default);
    color: var(--clr-text-default);
}

/*** START.html ***/
#startPageContainer {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    margin-top: 30vh;
    font-size: var(--fnt-sz-main-header);
}

h1 {
    font-size: var(--fnt-sz-main-header);
    font-weight: var(--fnt-wt-700);
}

/*** SETUP.html ***/
form {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    row-gap: 30px;
    padding: 0;
    margin-top: 15vh;
    margin-left: auto;
    margin-right: auto;
    max-width: 30vw;
    height: 60vh;
    background-color: var(--neu-bg-default);
    box-shadow: var(--neu-shadow-default);
    border-radius: 20px;
}

#setupTitle {
    margin: 0;
    color: var(--clr-text-default);
    font-size: var(--fnt-sz-settings-title);
    font-weight: var(--fnt-wt-700);
}

fieldset {
    border: 0;
    margin: 0;
    width: 80%;
    display: flex;
    flex-direction: column;
    align-items: center;
    row-gap: 2rem;
    background-color: var(--neu-bg-default);
}

legend {
    display: none;
    margin: 0;
    padding: 0;
}

input {
    font-size: 0.9rem;
    padding-left: 6px;
    max-width: 100%;
    background: var(--neu-bg-default);
    border: none;
    width: 100%;
    height: 3rem;
    border-radius: 20px;
    box-shadow: var(--neu-shadow-input);
    text-align: center;
    font-size: var(--fnt-fm-default);
    color: var(--clr-text-default);
}

label {
    font-size: var(--fnt-sz-text-default);
    font-weight: var(--fnt-wt-700);
}

/*** BUTTONS ***/
button {
    cursor: pointer;
    font-size: var(--fnt-sz-text-default);
    font-family: inherit;
    font-weight: var(--fnt-wt-700);
    color: var(--clr-text-default);
    text-transform: uppercase;
    text-align: center;
    background: var(--neu-bg-default);
    box-shadow: var(--neu-btn-shadow-default);
    padding: 1rem 6rem;
    border-radius: 15px;
    border: none;
}

button:hover {
    background: var(--neu-bg-up);
}

button:active {
    box-shadow: var(--neu-btn-shadow-down);
}

body > .new-game-btn {
    margin: 20px;
    padding: 0.5rem 2rem; 
    font-size: var(--fnt-sz-footer-text);

}

/*** SCOREBOARD ***/
.scoreBoard {
    display: flex;
    justify-content: center;
    column-gap: 50px;
    margin-bottom: 50px;
}


/*** GAMEBOARD ***/
.board { 
    display: grid;
    height: 60%; 
    justify-content: center; 
    align-content: center;
    grid-template-columns: repeat(3, auto);
    justify-items: center;
    align-items: center;
    gap: 2rem; 
    background-color: var(--neu-bg-default);
}

.cell {
    width: var(--cell-size);
    height: var(--cell-size);
    background-color: var(--neu-bg-up);
    box-shadow: var(--neu-shadow-down);
    border: none;
    border-radius: 30px;
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
    cursor: pointer;
} 

.cell.win {
    background-color: var(--clr-green);
}

/** SYMBOLS/MARKERS **/
/* Markers are designed purely in CSS as opposed to text in HTML. 
With the text approach, you'd have to worry about font sizes and the symbols will depend on the font that you use. It's going to be hard to center. A third approach that avoids this complication is to simply use icons. */

/* Hover effect vis-a-vis gameboard state ('x' or 'circle''s turn) */
/* (Psst, most complex part of the CSS) */ 

.cell.x,
.cell.circle {
    cursor: not-allowed;
}

.cell.x::before,
.cell.x::after,
.cell.circle::before,
.cell.circle::after {
    background-color: black;
}

.board.x .cell:not(.x):not(.circle):hover::before,
.board.x .cell:not(.x):not(.circle):hover::after,
.board.circle .cell:not(.x):not(.circle):hover::before {
    background-color: lightgrey;
}

/* X SYMBOL */
.cell.x::before,
.cell.x::after,
.board.x .cell:not(.x):not(.circle):hover::before,
.board.x .cell:not(.x):not(.circle):hover::after {
    content: ''; 
    position: absolute;
    width: calc(var(--mark-size) * 0.15);
    height: var(--mark-size);
    background-color: var(--clr-dark-grey);
}  
 
.cell.x::before, 
.board.x .cell:not(.x):not(.circle):hover::before { 
    transform: rotate(45deg);
}

.cell.x::after,
.board.x .cell:not(.x):not(.circle):hover::after {
    transform: rotate(-45deg);
}

/* CIRCLE SYMBOL */
.cell.circle::before,
.cell.circle::after,
.board.circle .cell:not(.x):not(.circle):hover::before,
.board.circle .cell:not(.x):not(.circle):hover::after {
    content: ''; 
    position: absolute;
    border-radius: 50%;
}  

.cell.circle::before,
.board.circle .cell:not(.x):not(.circle):hover::before {
    width: var(--mark-size);
    height: var(--mark-size);
    background-color: var(--clr-dark-grey);
}

.cell.circle::after,
.board.circle .cell:not(.x):not(.circle):hover::after {
    width: calc(var(--mark-size) * 0.7);
    height: calc(var(--mark-size) * 0.7);
    background-color: var(--clr-light-grey);
}

.cell.circle.win::after {
    background-color: var(--clr-green);
}

/*** MODAL ***/ 
.modal {
    position: fixed;
    z-index: 1;
    left:0;
    top:0;
    height: 100%;
    width: 100%;
    overflow: auto;
    background-color: rgba(0,0,0,0.6);
    backdrop-filter: blur(5px);
    display:none;
}

.modal-content {
    height: 50vh;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-content: center;
    row-gap: 2rem;
    margin: auto;
    animation-name: modalopen;
    animation-duration: 0.5s;
    border-radius: 10px;
}

#resultMessage {
    color: white;
    font-size: var( --fnt-sz-result-text);
    margin: 0;
}

.modal-content button {
    max-width: 60%;
    margin-left: auto;
    margin-right: auto;
}

@keyframes modalopen{
    from {opacity: 0}
    to {opacity: 1}
}

/*** FOOTER ***/
.footer {
    position: absolute;
    left: 0;
    bottom: 0;
    padding: 2rem;
    width: 100%;
    font-size: var(--fnt-sz-footer-text);
    color: var(--clr-footer-text);
    display: flex;
    justify-content: center;
    align-items: center;
}
